type Query {
  users(id: ID): [User]!
  products(id: ID): [Product]!
  carts(id: ID): [Cart]!
  payments(id: ID): [Payment]!
  login(userName:String!,password:String!):Reply!
}

type Mutation {
  AddUser(userName: String!, password: String!, name: String!): User!
  EditProfile(userName:String!,doorNo:String,street:String,area:String,landmark:String,state:String,pincode:String,mobileNo:String):Reply!
  AddToCart(productID: ID!, userID: ID!): Reply!
  DeleteFromCart(productID: ID, userID: ID!): Reply!
  MakePayment(userID: ID!,payMode:String!,amount:String!,address:String!): Payment!
}

type User {
  id: ID
  userName: String
  password: String
  name: String
  mobileNo:String
  cart: Cart
  payment: Payment
  address: Address
  message:String
}

type Product {
  id: ID
  name: String
  price: Float
  description: String
}
type Reply{
  userID:String
  message:String
}
# type ProductOnCart{
#   productID: Int
#   product:   Product
#   cartID:    Int
#   cart:      Cart
#   message:String
# }

type Cart {
  id: ID
  products: [Product]
  user: User
}

type Payment {
  id: ID
  user: User!
  amount: Int!
  address:String!
  products: [String!]!
  payMode:String
}

type Address {
  id:       ID
  doorNo:   String!
  street:   String!
  area:     String!
  landmark: String
  state:    String!
  pincode:  String!
  user:     User!     
}